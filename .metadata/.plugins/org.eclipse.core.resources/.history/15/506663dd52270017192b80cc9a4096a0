import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.Scanner;

public class HitAndBlowTest {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("何桁の数字で開始しますか？（1〜9）");
		int degit = inputDegit();
		int successCount =inputAns(makeNumList(degit));
		System.out.println("クリア");

	}

	/**
	 * PCの文字出力演出
	 * @param str
	 */
	public static void toCharSlow(String str) {
		char data[] = str.toCharArray();
		// 配列数を取得
		int arr_num = data.length;
		for (int i = 0; i <= arr_num - 1; i++) {
			try {
				// 指定ミリ秒の間眠る
				Thread.sleep(600);
			}
			catch(InterruptedException e) {
			}
			System.out.print(data[i]);
		}
	}

	/**
	 * 桁数判定
	 * @param inputD
	 * @return inputDInt
	 */
	public static int inputDegit() {
		loop : while (true) {
			Scanner sc = new Scanner(System.in);
			String input = sc.nextLine();
			String[] inputNumList = input.split("");
			String[] testNum = {"1","2","3","4","5","6","7","8","9"};
			for (String inputNum : inputNumList) {
				if (Arrays.asList(testNum).contains(inputNum) || inputNumList.length != 1) {
					System.out.println("数値を入力してください");
					continue loop;
				}
			}
			int inputInt = Integer.parseInt(input);
			if ((1 <= inputInt && inputInt <= 9) && inputNumList.length == 1)
				return inputInt;
			else
				System.out.println("正しい数値を入力してください");
		}
	}

	public static boolean isContain(String str) {
		try {
			Integer.parseInt(str);
			return true;
		}
		catch(NumberFormatException e) {
			return false;
		}
	}

	/**
	 * 引数で渡した桁の数値をランダムで生成
	 * @param digit
	 * @return num
	 */
	public static List<String> makeNumList(int digit) {
		List<String> numList = new ArrayList<String>();
		for (int i = 0; i < digit; i++) {
			String ranNum = String.valueOf(new Random().nextInt(9) + 1);
			numList.add(ranNum);
		}
		return numList;
	}

	/**
	 * 回答の入力判定
	 * @param pcUnitList
	 */
	public static int inputAns(List<String> pcUnitList) {
		int count = 0;
		String num = null;
		String[] testList = {"1","2","3","4","5","6","7","8","9"};
		loop : while (true) {
			count++;
			Scanner sc = new Scanner(System.in);
			Map<String,Integer> hobMap = new HashMap<String,Integer>();
			String inputNum = sc.nextLine();
			List<String> inputList = new ArrayList<String>(Arrays.asList(inputNum.split("")));
			if (inputList.size() == pcUnitList.size()) {
				for (String input : inputList) {
					if (Arrays.asList(testList).contains(input)) {
						List<String> inputList2 = new ArrayList<String>(inputList);
						inputList2.remove(input);
						if (inputList2.contains(input) == false) {
							num += input;
							hobMap = hitBrewCount(count,num,pcUnitList);
							if (hobMap.get("Hit") == pcUnitList.size())
								break loop;
							break;
						}
						else {
							System.out.println("重複している値があります");
						continue loop;
						}
					}
					else
						System.out.println("数値ではありません");
				}
			}
			else
				System.out.println("桁数に過ちがあります");
		}
		return count;
	}

	/**
	 * ゲーム結果の判定
	 * @param str
	 * @return
	 */
	public static Map<String,Integer> hitBrewCount(int count, String num, List<String> pcUnitList) {
		Map<String,Integer> hobMap = new HashMap<String,Integer>();
		hobMap.put("Hit", 0);
		hobMap.put("Blow", 0);
		String[] numUnitList = num.split("");
		for(String pcUnit : pcUnitList) {
			for(String numUnit : numUnitList) {
				if (pcUnit == numUnit) {
					hobMap.put("Hit", hobMap.get("Hit") + 1);
					break;
				}
				if (pcUnitList.contains(numUnit)) {
					hobMap.put("Blow", hobMap.get("Blow") + 1);
					break;
				}
			}
		}
		System.out.println(count + "回目の回答");
		if (numUnitList.length != pcUnitList.size())
			System.out.println(num + " （" + hobMap.get("Hit") + " Hit: " + hobMap.get("Blow") + "）");
		return hobMap;
	}
}
